version: "3.8"

services:
  mongo-db:
    image: mongo:4.2.10
    hostname: mongo
    environment:
      MONGO_INITDB_DATABASE: snackpass
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  server:
    build:
      context: ./server
      dockerfile: ./Dockerfile
    environment:
      PORT: 5000
      MONGODB_URI: mongodb://mongo:27017/snackpass
    ports:
      - "5000:5000"
    command: yarn start:dev
    volumes:
      # NOTE: https://medium.com/@semur.nabiev/how-to-make-docker-compose-volumes-ignore-the-node-modules-directory-99f9ec224561
      # Bind local sources to remote volume, excluding node_modules. This is especially important
      # when developing on Mac, but are running Linux in Docker (obviously).
      - ./server:/src
      - /src/node_modules
    links:
      - mongo-db
    depends_on:
      - mongo-db
  # client:
  #   build:
  #     context: ./client
  #     dockerfile: ./Dockerfile
  #   environment:
  #     PORT: 8000
  #   ports:
  #     - "8000:8000"
  #   command: yarn dev
  #   volumes:
  #     # NOTE: https://medium.com/@semur.nabiev/how-to-make-docker-compose-volumes-ignore-the-node-modules-directory-99f9ec224561
  #     # Bind local sources to remote volume, excluding node_modules. This is especially important
  #     # when developing on Mac, but are running Linux in Docker (obviously).
  #     - ./client:/src
  #     - /src/node_modules
  #   links:
  #     - server
  #   depends_on:
  #     - server

# Persist data in a dedicated volume
# Otherwise, you will lose data when you delete mongo-db container
volumes:
  mongodb_data: